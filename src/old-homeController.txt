
/**
 * https://www.npmjs.com/package/mysql2
 */
// get the client
// import mysql from 'mysql2';

// import bcrypt from 'bcryptjs';
// const salt = bcrypt.genSaltSync(10);

// create the connection to database
// const connection = mysql.createConnection({
//   host: 'localhost',
//   user: 'root',
//   database: 'jwt_nodejs'
// });
import userService from '../service/userService';

const handleHelloWorld = (req, res) => {
    // return res.send("Hello world controller 2");

    return res.render("home.ejs");
}

const handleUserPage = async(req, res) => {
    let userList = await userService.getListUser();
    console.log('>>> check userList: ', userList);
   
    return res.render("user.ejs",{userList});
}
const handleCreateNewUser = (req, res) => {
    let email = req.body.email;
    let password = req.body.password;
    let username = req.body.username;

    //model <=> get data from database
    userService.createNewUser(email, password, username);

    // userService.getListUser();

    // let hashPassword = bcrypt.hashSync(password, salt);
    // console.log('>>> check req: ', req.body);
    // console.log('>>> check hash password: ',hashPassword);
    
    // let check = bcrypt.compareSync(password, hashPassword); // true
    // console.log('>>> check password: ',check);

    // connection.query(
    //     'INSERT INTO users (email, password, username) VALUES (?, ?, ?)',[email, password, username],
    //     function(err, results, fields) {
    //         if(err){
    //             console.log(err);
    //         }
    //       console.log(results); // results contains rows returned by server
    //       console.log(fields); // fields contains extra meta data about results, if available
    //     }
    //   );
    return res.redirect("/user");
}

const handleDeleteUser = async(req, res) => {
    await userService.deleteUser(req.params.id);
    return res.redirect("/user");
}

// Export a file 
module.exports = {
    handleHelloWorld, 
    handleUserPage,
    handleCreateNewUser,
    handleDeleteUser,
}